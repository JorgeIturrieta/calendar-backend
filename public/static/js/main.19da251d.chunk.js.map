{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/calendar.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRouter.js","router/PrivateRouter.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","message","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setformValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","minDate","autoComplete","rows","momentStart","momentEnd","isSameOrAfter","trim","length","Error","getSate","_id","eventStartAddNew","error","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","args","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19da251d.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[calendar] Set Active Event',\n    eventLogout: '[calendar]  Clear Events',\n    eventAddNew: '[calendar] Add Event',\n    eventStartAddNew: '[calendar] Start Add new Event',\n    eventClearActiveEvent: '[calendar] Clear active Event',\n    eventUpdated: '[calendar] Event Updated',\n    eventDeleted: '[calendar] Event Deleted',\n    eventLoaded: '[calendar] Event Loaded',\n     \n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authlogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token Renew',\n    authlogout: '[auth] Logout',\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    //uid :null ,\n    //name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.authlogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload,\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authlogout:\n            return {                \n                checking: false\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from '../types/types';\n/* {\n    id:new Date().getTime() ,\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: '#fafafa',\n    notes: 'Comprar ropa',\n    user: {\n        _id: '124wrerfds',\n        name: 'Jorge'\n    }    \n} */\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\n\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ],\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false ,\n}\nexport const uiReducer = (state = initialState , action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:          \n           return {\n               ...state ,\n               modalOpen: true ,\n           }\n\n           case types.uiCloseModal:            \n           return {\n               ...state ,\n               modalOpen: false ,\n           }\n    \n    \n        default:\n           return state\n    }\n}","import {combineReducers} from 'redux'\nimport { authReducer } from './authReducer'\nimport { calendarReducer } from './calendarReducer'\nimport { uiReducer } from './uiReducer'\nexport const rootReducer = combineReducers({\n    ui: uiReducer ,\n    calendar: calendarReducer ,\n    auth: authReducer ,\n})","import { createStore,compose,applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from 'redux-thunk';\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store = createStore(\n    rootReducer ,\n    composeEnhancers(\n        applyMiddleware(thunk)\n        )\n\n)","const baseUrl = process.env.REACT_APP_API_URL;\nexport const fetchWithOutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`; // locahost:4000/api/auth/\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nexport const fetchWithToken = (endpoint, data = {}, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`; // locahost:4000/api/auth/\n    const token = localStorage.getItem('token') || '';\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n","import moment from 'moment'\nexport const prepareEvents = (events = []) => {\n    //console.log(events);\n    return  events.map(e => ({\n        ...e ,\n        start: moment( e.start).toDate() ,\n        end: moment(e.end).toDate() \n    }))\n\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getSate) => {\n        const { uid, name } = getSate().auth;\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdated = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                throw new Error(body.message);\n            }\n\n        } catch (error) {\n            console.log(error.message);\n            Swal.fire('Error', error.message, 'error');\n        }\n    }\n}\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const startEventDeleted = (event) => {\n    return async (dispatch, getSate) => {\n        try {\n            const { id } = getSate().calendar.activeEvent;\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                throw new Error(body.message);\n            }\n\n        } catch (error) {\n            console.log(error.message);\n            Swal.fire('Error', error.message, 'error');\n        }\n    }\n}\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken('events');\n            const { events } = await resp.json();\n            dispatch(eventLoaded(prepareEvents(events)));\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type:types.eventLogout\n});\n\n\n","import Swal from \"sweetalert2\";\nimport { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./calendar\";\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchWithOutToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Error', body.message, 'error');\n        }\n    }\n}\n\nexport const startRegister = (name,email,password) => {\n    return async (dispatch) => {\n        const resp = await fetchWithOutToken('auth/new', { name,email, password }, 'POST');\n        const body = await resp.json();\n        console.log(body);\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Error', body.message, 'error');\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        const resp = await fetchWithToken('auth/renew');\n        const body = await resp.json();  \n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {           \n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish = () => ({\n    type:types.authCheckingFinish\n});\n\nconst login = (user) => ({\n    type: types.authlogin,\n    payload: user,\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authlogout\n})"," \nimport { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'jorge.10.iturrieta@gmail.com',\n        lPassword: '123456',\n    });\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'test1',\n        rEmail: 'test1@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    });\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (rPassword1 !== rPassword2) {\n\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\n        }\n        dispatch(startRegister(rName, rEmail, rPassword1));\n    }\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\n\nexport const Navbar = () => {\n    const { name } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const handleLogout = () => {\n        dispatch(startLogout());\n       \n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react' ;\n\n\nexport const CalendarEvent = ({event}) => {\n    const {title,user} = event ;\n    return (\n        <div>\n            <strong>{title}</strong>\n            <strong>{` - ${user.name}`}</strong>\n\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdated } from '../../actions/calendar';\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus = now.clone().add(1, 'hours');\nconst initEvent = {\n    title: 'Evento',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus.toDate()\n}\nexport const CalendarModal = () => {\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n    const [dateStart, setdateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus.toDate());\n    const [titleValid, setTitleValid] = useState(true)\n    const [formValues, setformValues] = useState(initEvent);\n    const { notes, title, start, end } = formValues;\n    useEffect(() => {       \n        if(activeEvent) {\n            setformValues(activeEvent);\n            setdateStart(activeEvent.start);\n            setDateEnd(activeEvent.end);\n            console.log('activeEvent',activeEvent);\n        } else {\n            \n            setformValues(initEvent);\n            \n        }\n      \n    }, [activeEvent,setformValues])\n\n    const handleInputChange = ({ target }) => {\n        setformValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n    const handleStartDateChange = (e) => {\n        \n        setdateStart(e);\n        setformValues({\n            ...formValues,\n            start: e\n        })\n    }\n    const closeModal = () => {\n        // TODO: cerrar el modal \n        dispatch(uiCloseModal())\n        dispatch(eventClearActiveEvent());\n       setformValues(initEvent);\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setformValues({\n            ...formValues,\n            end: e\n        })\n    }\n    const handleSubmitForm = (e) => {\n        try {\n\n            e.preventDefault();\n            const momentStart = moment(start);\n            const momentEnd = moment(end);\n            console.log(momentStart);\n            console.log(momentEnd);\n            if (momentStart.isSameOrAfter(momentEnd, 'hour')) {\n                console.log(\"Fecha 2 debe ser mayor\");\n                return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\n            }\n\n            if (title.trim().length < 2) {\n                return setTitleValid(false);\n            }\n            // TODO: REALIZAR grabacion en base de datos\n          if(activeEvent) {\n              // Modificando un evento existente            \n              dispatch(eventStartUpdated(formValues));\n          } else {\n              // Es un nuevo evento\n\n              dispatch(eventStartAddNew(formValues)) ;\n\n          } \n            setTitleValid(true);\n            closeModal();\n\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            /*  onAfterOpen={afterOpenModal}*/\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n\n        >\n            <h1> {activeEvent ? \"Editar Evento\" : \"Crear Evento\" } </h1>\n            <hr />\n            <form\n                className=\"container\"\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                    onClick={handleSubmitForm}\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar </span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n    const handleButton = () => {\n        dispatch(uiOpenModal());\n    }\n    return (\n        <button \n        className = \"btn btn-primary fab\"\n        onClick = {handleButton}\n        >                 \n        <i className =\"fas fa-plus\"> </i>        \n        </button >\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {  startEventDeleted } from '../../actions/calendar';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n   \n    const handleDelete = () => {\n        dispatch(startEventDeleted());\n    }\n    return (\n        <button \n        className = \"btn btn-danger fab-danger\"\n        onClick = {handleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n            \n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es'\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/calendar';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n   \n    const dispatch = useDispatch();\n    // TODO: leer del store los eventos  \n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading());    \n    }, [dispatch]);    \n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    }\n    \n    const eventSyleGetter = (event, start, end, isSelected) => {        \n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#006A4E'   ,\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventSyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot = { onSelectSlot }\n                selectable = { true }\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n            <AddNewFab />\n            {\n                activeEvent && <DeleteEventFab />\n            }\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> :  <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...args\n}) => {\n  \n  return (      \n    <Route\n      {...args}\n      component={(props) =>       \n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRouter';\nimport { PrivateRoute } from './PrivateRouter';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const {checking, uid  } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n\n  }, [dispatch]) ;\n   if(checking) {\n        return <h5>Wait...</h5>\n   }\n    return (\n        <Router>\n        <div>    \n          <Switch>\n            <PublicRoute \n            exact\n            path=\"/login\"\n            component = { LoginScreen}\n            isAuthenticated = {!!uid}\n            />          \n            <PrivateRoute \n            exact \n            path=\"/\"\n            component = {CalendarScreen}\n            isAuthenticated = {!!uid}\n            /> \n            <Redirect  to = \"/\"/>            \n          </Switch>\n        </div>\n      </Router>\n    )\n}\n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport { store } from './store/store'\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport  './styles.css' ;\n//console.log(process.env.REACT_APP_API_URL);\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}